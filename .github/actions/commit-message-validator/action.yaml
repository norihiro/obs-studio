name: Check commit message
description: Check git commit messages complying CONTRIBUTING.rst
inputs:
  failCondition:
    description: Controls whether failed checks also fail the workflow run.
    required: false
    default: never
  unknownModuleLevel:
    description: Controls whether failed checks at unknown module name. Set "error" to fail.
    required: false
    default: warning
  workingDirectory:
    description: Working directory for checks.
    required: false
    default: ${{ github.workspace }}
runs:
  using: composite
  steps:
    - name: Check Runner Operating System üèÉ‚Äç‚ôÇÔ∏è
      if: runner.os == 'Windows'
      shell: bash
      run: |
        : Check Runner Operating System üèÉ‚Äç‚ôÇÔ∏è
        echo "::notice::services-validation action requires a macOS-based or Linux-based runner."
        exit 2

    - name: Install and Configure Python üêç
      shell: bash
      working-directory: ${{ inputs.workingDirectory }}
      run: |
        : Install and Configure Python üêç
        if [[ "${RUNNER_DEBUG}" ]]; then set -x; fi

        echo ::group::Python Set Up
        if [[ "${RUNNER_OS}" == Linux ]]; then
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          echo "/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin" >> $GITHUB_PATH
          brew install --overwrite --quiet python3
        fi

        python3 -m venv .venv

        source .venv/bin/activate
        python3 -m pip install gitpython
        echo ::endgroup::


    - name: Fetch commits from GitHub
      shell: bash
      working-directory: ${{ inputs.workingDirectory }}
      run: |
        : Run log message checker
        gh api repos/${{ github.repository }}/pulls/${{ github.event.number }}/commits > commits.json
      env:
        GH_TOKEN: ${{ github.token }}

    - name: Run log message checker üïµÔ∏è
      shell: bash
      working-directory: ${{ inputs.workingDirectory }}
      run: |
        : Run log message checker üïµÔ∏è
        if [[ "${RUNNER_DEBUG}" ]]; then set -x; fi

        echo ::group::Run Validation

        source .venv/bin/activate
        python3 -u \
          .github/scripts/utils.py/commit-message-validator.py \
          --fail-${{ inputs.failCondition }} \
          --unknown-module-${{ inputs.unknownModuleLevel }} \
          --verbose \
          --json commits.json
        echo ::endgroup::
